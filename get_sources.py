#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏–∑ –ë–∏—Ç—Ä–∏–∫—Å24
"""

import json
import requests
from datetime import datetime

# –í–µ–±—Ö—É–∫ –∫–ª–∏–µ–Ω—Ç–∞
WEBHOOK_URL = "https://promarketing1.bitrix24.ru/rest/9/fxn8xyfbalblll9s"

def get_deal_sources():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è —Å–¥–µ–ª–æ–∫"""
    print("=== –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å–¥–µ–ª–æ–∫ ===")
    
    try:
        url = "{}/crm.status.list".format(WEBHOOK_URL)
        params = {
            'filter': {
                'ENTITY_ID': 'SOURCE'
            }
        }
        
        response = requests.post(url, json=params)
        response.raise_for_status()
        
        data = response.json()
        
        if 'result' in data:
            sources = data['result']
            
            print("–ù–∞–π–¥–µ–Ω–æ {} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è —Å–¥–µ–ª–æ–∫:".format(len(sources)))
            print("-" * 60)
            
            for source in sources:
                status_id = source.get('STATUS_ID', 'N/A')
                name = source.get('NAME', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                sort = source.get('SORT', 'N/A')
                
                print("ID: {} | –ù–∞–∑–≤–∞–Ω–∏–µ: {} | –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {}".format(
                    status_id, name, sort
                ))
            
            return sources
        else:
            print("–û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API: {}".format(data))
            return []
            
    except requests.exceptions.RequestException as e:
        print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {}".format(e))
        return []
    except Exception as e:
        print("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {}".format(e))
        return []

def get_contact_sources():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    print("\n=== –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ ===")
    
    try:
        url = "{}/crm.status.list".format(WEBHOOK_URL)
        params = {
            'filter': {
                'ENTITY_ID': 'SOURCE_CONTACT'
            }
        }
        
        response = requests.post(url, json=params)
        response.raise_for_status()
        
        data = response.json()
        
        if 'result' in data:
            sources = data['result']
            
            print("–ù–∞–π–¥–µ–Ω–æ {} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:".format(len(sources)))
            print("-" * 60)
            
            for source in sources:
                status_id = source.get('STATUS_ID', 'N/A')
                name = source.get('NAME', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                sort = source.get('SORT', 'N/A')
                
                print("ID: {} | –ù–∞–∑–≤–∞–Ω–∏–µ: {} | –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {}".format(
                    status_id, name, sort
                ))
            
            return sources
        else:
            print("–û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API: {}".format(data))
            return []
            
    except requests.exceptions.RequestException as e:
        print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {}".format(e))
        return []
    except Exception as e:
        print("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {}".format(e))
        return []

def get_lead_sources():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –ª–∏–¥–æ–≤"""
    print("\n=== –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ª–∏–¥–æ–≤ ===")
    
    try:
        url = "{}/crm.status.list".format(WEBHOOK_URL)
        params = {
            'filter': {
                'ENTITY_ID': 'SOURCE_LEAD'
            }
        }
        
        response = requests.post(url, json=params)
        response.raise_for_status()
        
        data = response.json()
        
        if 'result' in data:
            sources = data['result']
            
            print("–ù–∞–π–¥–µ–Ω–æ {} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –ª–∏–¥–æ–≤:".format(len(sources)))
            print("-" * 60)
            
            for source in sources:
                status_id = source.get('STATUS_ID', 'N/A')
                name = source.get('NAME', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                sort = source.get('SORT', 'N/A')
                
                print("ID: {} | –ù–∞–∑–≤–∞–Ω–∏–µ: {} | –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {}".format(
                    status_id, name, sort
                ))
            
            return sources
        else:
            print("–û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API: {}".format(data))
            return []
            
    except requests.exceptions.RequestException as e:
        print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {}".format(e))
        return []
    except Exception as e:
        print("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {}".format(e))
        return []

def save_sources_to_json(deal_sources, contact_sources, lead_sources):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ JSON —Ñ–∞–π–ª"""
    
    data = {
        'timestamp': datetime.now().isoformat(),
        'webhook_url': WEBHOOK_URL,
        'sources': {
            'deals': deal_sources,
            'contacts': contact_sources,
            'leads': lead_sources
        }
    }
    
    filename = 'bitrix_sources_{}.json'.format(datetime.now().strftime('%Y%m%d_%H%M%S'))
    
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        
        print("\n‚úì –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {}".format(filename))
        return filename
    except Exception as e:
        print("\n‚úó –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {}".format(e))
        return None

def create_sources_reference():
    """–°–æ–∑–¥–∞—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏"""
    
    deal_sources = get_deal_sources()
    contact_sources = get_contact_sources()
    lead_sources = get_lead_sources()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫
    reference = []
    reference.append("=" * 80)
    reference.append("–°–ü–†–ê–í–û–ß–ù–ò–ö –ò–°–¢–û–ß–ù–ò–ö–û–í –ë–ò–¢–†–ò–ö–°24")
    reference.append("–ü–æ—Ä—Ç–∞–ª: promarketing1.bitrix24.ru")
    reference.append("–í—Ä–µ–º—è: {}".format(datetime.now().strftime('%Y-%m-%d %H:%M:%S')))
    reference.append("=" * 80)
    
    if deal_sources:
        reference.append("\nüìã –ò–°–¢–û–ß–ù–ò–ö–ò –î–õ–Ø –°–î–ï–õ–û–ö (SOURCE):")
        reference.append("-" * 50)
        for source in deal_sources:
            reference.append("  ID: {} -> {}".format(
                source.get('STATUS_ID', 'N/A'),
                source.get('NAME', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            ))
    
    if contact_sources:
        reference.append("\nüë§ –ò–°–¢–û–ß–ù–ò–ö–ò –î–õ–Ø –ö–û–ù–¢–ê–ö–¢–û–í (SOURCE_CONTACT):")
        reference.append("-" * 50)
        for source in contact_sources:
            reference.append("  ID: {} -> {}".format(
                source.get('STATUS_ID', 'N/A'),
                source.get('NAME', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            ))
    
    if lead_sources:
        reference.append("\nüéØ –ò–°–¢–û–ß–ù–ò–ö–ò –î–õ–Ø –õ–ò–î–û–í (SOURCE_LEAD):")
        reference.append("-" * 50)
        for source in lead_sources:
            reference.append("  ID: {} -> {}".format(
                source.get('STATUS_ID', 'N/A'),
                source.get('NAME', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            ))
    
    reference.append("\n" + "=" * 80)
    reference.append("–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    reference.append("")
    reference.append("# –°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º:")
    reference.append("curl -X POST '{}/crm.deal.add' \\".format(WEBHOOK_URL))
    reference.append("  -H 'Content-Type: application/json' \\")
    reference.append("  -d '{")
    reference.append('    "fields": {')
    reference.append('      "TITLE": "–¢–µ—Å—Ç–æ–≤–∞—è —Å–¥–µ–ª–∫–∞",')
    reference.append('      "SOURCE_ID": "1",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π ID')
    reference.append('      "CONTACT_ID": 123')
    reference.append('    }')
    reference.append('  }"')
    reference.append("")
    reference.append("# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–¥–µ–ª–∫–∏:")
    reference.append("curl -X POST '{}/crm.deal.update' \\".format(WEBHOOK_URL))
    reference.append("  -H 'Content-Type: application/json' \\")
    reference.append("  -d '{")
    reference.append('    "id": 456,  # ID —Å–¥–µ–ª–∫–∏')
    reference.append('    "fields": {')
    reference.append('      "SOURCE_ID": "2"  # –ù–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫')
    reference.append('    }')
    reference.append('  }"')
    reference.append("=" * 80)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫
    filename = 'sources_reference.txt'
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            f.write('\n'.join(reference))
        
        print("\n‚úì –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {}".format(filename))
    except Exception as e:
        print("\n‚úó –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞: {}".format(e))
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON
    save_sources_to_json(deal_sources, contact_sources, lead_sources)
    
    return deal_sources, contact_sources, lead_sources

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏–∑ –ë–∏—Ç—Ä–∏–∫—Å24")
    print("–ü–æ—Ä—Ç–∞–ª: promarketing1.bitrix24.ru")
    print("=" * 60)
    
    deal_sources, contact_sources, lead_sources = create_sources_reference()
    
    print("\nüéâ –ì–û–¢–û–í–û!")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã:")
    print("  - sources_reference.txt (—Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫)")
    print("  - bitrix_sources_*.json (–¥–∞–Ω–Ω—ã–µ –≤ JSON)")

if __name__ == '__main__':
    main()
